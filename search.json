[{"path":[]},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team k.derks@nyenrode.nl. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://koenderks.github.io/rcityviews/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://koenderks.github.io/rcityviews/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial: Exploring Amsterdam","text":"Welcome tutorial page rcityviews package! aim page show can use package create stylized images world’s cities. tutorial, focus rendering one favorite cities world: Amsterdam. course, feel free adjust code provided create image city choice. First, allow shortly share motivation behind development package. like look printed city posters. instance, think nice present friend’s birthday use decoration living space. However, price tag restricted options associated buying posters online often dissuaded making purchase. Nevertheless, wanted one depicting hometown hanging wall living room. Luckily, fortunate enough live fascinating era open-source software can used accomplish almost anything. Thanks incredible efforts made OpenStreetMap contributors, treasure trove open geographical data currently available, enabling everybody effectively make high-quality city posters R. Maybe even important posters cost money, also free. start mapping, let’s introduce star tutorial. Amsterdam capital populous city Netherlands well-known canals, museums, bicycles, coffee shops (ones sell coffee). city also incredibly diverse, residents 180 different nationalities living within limits. much variety urban natural features, Amsterdam makes pretty picture look sky. Source: https://commons.wikimedia.org/wiki/File:Amsterdam_Satellite.jpg","code":""},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"mapping-the-city","dir":"Articles","previous_headings":"","what":"Mapping the City","title":"Tutorial: Exploring Amsterdam","text":"start mapping city R, first need install rcityviews package (see home page installation instructions) load package current R session. package contains large internal database cities names coordinates can access using list_cities() function. Let’s verify city Amsterdam included internal database. can see, three entries internal database matched name “Amsterdam”. Since want make image Amsterdam Netherlands (first row output), simply need remember name city denoted Amsterdam internal database. matched name city database entry, can create image city providing city name string cityview() function. Please aware rendering times RStudio can quite long crowded spatial images. can avoid render time entirely specifying file name input filename argument cityview() function. , image directly exported working directory appropriate format. recommended approach ensures image displayed properly times. Moreover, want make high-quality poster (e.g., printing), recommended export image .pdf .svg file.  basic setup code block need map city internal database. However, can call cityview() function additional arguments style image liking. example, theme argument enables set color scheme font used image, border argument enables set type border surrounds city. can find detailed documentation examples arguments home page. instance, want image rendered minimalist style want city surrounded circular border, can use cityview() function additional arguments theme = \"original\" border = \"circle\".","code":"library(\"rcityviews\") #> Data by © OpenStreetMap contributors list_cities(match = \"Amsterdam\") #>              name         country   lat   long #> 1       Amsterdam The Netherlands 52.37   4.89 #> 2   New Amsterdam          Guyana  6.25 -57.53 #> 3 Nieuw Amsterdam        Suriname  5.91 -55.07 cityview(   name = \"Amsterdam\",   filename = \"Amsterdam.png\" ) cityview(   name = \"Amsterdam\",   border = \"circle\",   theme = \"original\",   filename = \"Amsterdam2.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"exploring-the-city","dir":"Articles","previous_headings":"","what":"Exploring the City","title":"Tutorial: Exploring Amsterdam","text":"Now learned create city view Amsterdam, let’s explore specific districts within city. Amsterdam divided seven main residential districts (.e., including harbor area “Havengebied”), unique hotspots features. can use various themes package create images districts stylize according makes unique. Source: https://amsterdam2050.nl/schalen/stadsdelen/","code":""},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"the-center-historic-and-outgoing","dir":"Articles","previous_headings":"Exploring the City","what":"The Center: Historic and Outgoing","title":"Tutorial: Exploring Amsterdam","text":"First, let’s explore center Amsterdam. specific location featured internal database, means need create new city instance using new_city() function. Instead drawing geometric border around location, can isolate center Amsterdam using bounding box district border (border = \"bbox\") image. Using bbox border slightly different using border style, since attempts retrieve border polygon using Nominatim API. means crucial name given new_city() matches entry Nominatim. can verify searching city API. instance, Nominatim contains center Amsterdam Centrum, Amsterdam, name argument code specified \"Centrum, Amsterdam\". Next, can use created city instance input cityview() function, also providing argument border = \"bbox\". render image center Amsterdam using bounding box district. center Amsterdam historical cultural hub, known canals, architecture, tourist attractions. district offers unique blend historic charm modern energy. capture historical significance within city, found vintage theme suits district best.","code":"amsterdam <- list_cities(\"Amsterdam\")[1, ] # Create instance center <- new_city(   name = \"Centrum, Amsterdam\",   country = \"The Netherlands\",   lat = amsterdam[1, 3],   long = amsterdam[1, 4] ) #> Discovered the city of Centrum, Amsterdam, The Netherlands at 52.37° / 4.89°! # Create image cityview(   name = center,   border = \"bbox\",   filename = \"AmsterdamCenter.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"the-east-cultural-melting-pot","dir":"Articles","previous_headings":"Exploring the City","what":"The East: Cultural Melting Pot","title":"Tutorial: Exploring Amsterdam","text":"Let’s expand tour Amsterdam districts, like Amsterdam-Oost. Oost district located eastern part Amsterdam, adjacent city center. well-known diverse neighborhoods, trendy cafes cultural hotspots, creating cultural melting pot lively atmosphere. can obtain data district creating new city instance using Oost, Amsterdam, available Nominatim API. Similar , created new city instance using new_city() function, can use cityview() function border = \"bbox\" argument render image using bounding box district. Oost offers diverse mix cultural experiences, found bright theme fitting district.","code":"# Create instance east <- new_city(   name = \"Oost, Amsterdam\",   country = \"The Netherlands\",   lat = amsterdam[1, 3],   long = amsterdam[1, 4] ) # Create image cityview(   name = east,   border = \"bbox\",   theme = \"bright\",   filename = \"AmsterdamEast.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"the-south-refined-elegance","dir":"Articles","previous_headings":"Exploring the City","what":"The South: Refined Elegance","title":"Tutorial: Exploring Amsterdam","text":"Let’s continue tour Amsterdam visiting one districts. Amsterdam-Zuid highly sought-district nestled southern part city. area renowned beautiful architecture, featuring elegant homes inspiring museums. southern part Amsterdam also boasts abundance beautiful parks, providing residents ample green spaces enjoy. creating new city instance Zuid, Amsterdam, available Nominatim API, can obtain necessary data district. probably know drill now, can use cityview() function border = \"bbox\" argument render image using bounding box district. Zuid quite upscale, decided render image delftware theme add touch elegance traditional Dutch flair.","code":"# Create instance south <- new_city(   name = \"Zuid, Amsterdam\",   country = \"The Netherlands\",   lat = amsterdam[1, 3],   long = amsterdam[1, 4] ) # Create image cityview(   name = south,   border = \"bbox\",   theme = \"delftware\",   filename = \"AmsterdamSouth.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"the-west-contemporary-cool","dir":"Articles","previous_headings":"Exploring the City","what":"The West: Contemporary Cool","title":"Tutorial: Exploring Amsterdam","text":"Let’s move Amsterdam-West, fourth district visit. Situated two sprawling parks close proximity city center, -working-class area transformed hub historic architecture, trendy concept stores, lively local bars residents ages like spend free time. Since arere already familiar process creating new city instance using Nominatim API, won’t go details West, Amsterdam. Due trendy vibes, believe modern theme good fit district.","code":"# Create instance west <- new_city(   name = \"West, Amsterdam\",   country = \"The Netherlands\",   lat = amsterdam[1, 3],   long = amsterdam[1, 4] ) # Create image cityview(   name = west,   border = \"bbox\",   theme = \"modern\",   filename = \"AmsterdamWest.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"the-north-artistic-hub","dir":"Articles","previous_headings":"Exploring the City","what":"The North: Artistic Hub","title":"Tutorial: Exploring Amsterdam","text":"Finally, let’s visit Amsterdam-Noord, district situated across IJ river north city center. former shipyard area, Noord gaining prominence upcoming district, known creative energy artistic scene. dynamic district presents captivating blend modern architecture, fashionable waterfront cafes vibrant cultural hubs. found comic theme fitting creative scene district, gives image bit playful touch.  wraps tour Amsterdam tutorial. Two districts, namely Nieuw-West Zuidoost, covered . encourage interested reader explore map districts .","code":"# Create instance north <- new_city(   name = \"Noord, Amsterdam\",   country = \"The Netherlands\",   lat = amsterdam[1, 3],   long = amsterdam[1, 4] ) # Create image cityview(   name = north,   border = \"bbox\",   theme = \"comic\",   filename = \"AmsterdamNorth.png\" )"},{"path":"https://koenderks.github.io/rcityviews/articles/rcityviews.html","id":"concluding-comments","dir":"Articles","previous_headings":"","what":"Concluding Comments","title":"Tutorial: Exploring Amsterdam","text":"hope found tutorial informative inspiring create personalized city maps using rcityviews package. created something ’re proud , love hear . Happy mapping! package largely made possible invaluable contributions unwavering dedication OpenStreetMap contributors developers made data available R users. tireless efforts continue improve accessibility open data mapping worldwide. heartfelt thank everyone involved!","code":""},{"path":"https://koenderks.github.io/rcityviews/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Koen Derks. Author, maintainer.","code":""},{"path":"https://koenderks.github.io/rcityviews/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Derks, K. (2024). rcityviews: Stylized city maps using OpenStreetMap (OSM) data. R package version 1.1.2.","code":"@Manual{,   title = {rcityviews: Stylized City Maps using OpenStreetMap (OSM) Data},   author = {Koen Derks},   year = {2023=4},   note = {R package version 1.1.2}, }"},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"r-city-views","dir":"","previous_headings":"","what":"Stylized City Maps using OpenStreetMap (OSM) Data","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"repository homage programming language R, open-source geographic data art map making. provides code examples render customizable stylized city maps using data OpenStreetMap. Take look tutorial quick guide get started. Installation Create R Create Shiny Acknowledgements Every three hours repository creates tweets view random city. can find city views created far twitter handle @rcityviews. Please hesitate share creations using hashtag #rcityviews!","code":""},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"functionality repository implemented R package rcityviews. package available CRAN can obtained via GitHub running command R. installation, can load package R session using following command.","code":"# install.packages(\"remotes\") # Uncomment if you do not have the 'remotes' package installed remotes::install_github(\"koenderks/rcityviews\", dependencies = TRUE) library(rcityviews)"},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"finding-a-city-to-map","dir":"","previous_headings":"Create your own in R","what":"Finding a city to map","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"First, can search city name package database using list_cities() function. function looks internal database finds city name contains expression match. find preferred city internal package database, can use new_city() function manually specify location using latitude longitude coordinates.","code":"list_cities(match = \"Ams\") #>                  name         country   lat   long #> 1356       Amstelveen The Netherlands 52.32   4.86 #> 1357        Amsterdam The Netherlands 52.37   4.89 #> 1358        Amstetten         Austria 48.13  14.86 #> 25857   New Amsterdam          Guyana  6.25 -57.53 #> 26031 Nieuw Amsterdam        Suriname  5.91 -55.07 city <- new_city(name = \"Lagos\", country = \"Portugal\", lat = 37.10, long = -8.68) #> Discovered the city of Lagos, Portugal at 37.1° / -8.68°!"},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"creating-the-map","dir":"","previous_headings":"Create your own in R","what":"Creating the map","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"Second, obtained name city want view specified location city, can use cityview() function create ggplot2 object. Use zoom argument zoom city (e.g., zoom > 1, decreases computation time) zoom city (e.g., zoom < 0.5, increases computation time). default, cityview() called cache = TRUE flag, means cache map data can quickly try different themes (see ).","code":"p <- cityview(name = \"Amsterdam\", zoom = 1) # or cityview(name = city) # see ?cityview for more input parameters of this function"},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"saving-the-map","dir":"","previous_headings":"Create your own in R","what":"Saving the map","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"Finally, render times R RStudio can long crowded spatial images. therefore recommended directly save image 500mm x 500mm format. Typically, ideal way given ggplot2 object named p execute command . However, can also instantly providing filename directly cityview() function via filename argument. save rendering time, image exported appropriate size function return ggplot2 object.  personal (non-commercial) printing advised use option license = FALSE save image .pdf .svg file. Afterwards, image best printed 500mm x 500mm format.","code":"ggplot2::ggsave(filename = \"Amsterdam.png\", plot = p, height = 500, width = 500, units = \"mm\", dpi = 100) cityview(name = \"Amsterdam\", filename = \"Amsterdam.png\")"},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"styling-the-map","dir":"","previous_headings":"Create your own in R","what":"Styling the map","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"ten pre-specified themes can used style image. image created using theme = \"vintage\" (default), options theme argument include modern (top left), bright (top middle), delftware (top right), comic (middle left), rouge (middle middle), original (middle right), midearth (bottom left), batik (bottom middle) vice (bottom right).  addition ten pre-specified themes, package provides full flexibility customize theme providing named list. demonstrated code block .  use custom font theme[[\"font\"]][[\"family\"]], simply donwload .ttf file font web, save path//font/<font_name>.ttf register font via code .","code":"# For example: black, beige and white theme, streets only myTheme <- list(   colors = list(     background = \"#232323\",     water = \"#232323\",     landuse = \"#232323\",     contours = \"#232323\",     streets = \"#d7b174\",     rails = c(\"#d7b174\", \"#232323\"),     buildings = \"#232323\",     text = \"#ffffff\",     waterlines = \"#232323\"   ),   font = list(     family = \"serif\",     face = \"bold\",     scale = 1,     append = \"\\u2014\"   ),   size = list(     borders = list(       contours = 0.15,       water = 0.4,       canal = 0.5,       river = 0.6     ),     streets = list(       path = 0.2,       residential = 0.3,       structure = 0.35,       tertiary = 0.4,       secondary = 0.5,       primary = 0.6,       motorway = 0.8,       rails = 0.65,       runway = 3     )   ) ) cityview(name = \"Rio de Janeiro\", zoom = 0.5, theme = myTheme, border = \"square\", filename = \"Rio.png\") sysfonts::font_add(\"<font_name>\", \"path/to/font/<font_name>.ttf\")"},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"enclosing-the-map","dir":"","previous_headings":"Create your own in R","what":"Enclosing the map","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"several types borders can used enclose city. image created using border = \"square\", options border argument include none (default), circle (left), rhombus (middle), square, hexagon, octagon, decagon bbox (right).","code":""},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"other-display-options","dir":"","previous_headings":"Create your own in R","what":"Other display options","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"three arguments cityview() function can used tailor image liking. First, argument halftone allows add colored dotted dither image (e.g., halftone = \"#ffffff\", left). Second, setting legend = TRUE adds distance measurer compass image (middle). Third, argument places takes integer adds amount names towns, villages, suburbs, quarters neighbourhoods image (e.g., places = 10, right).","code":""},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"create-your-own-in-shiny","dir":"","previous_headings":"","what":"Create your own in Shiny","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"can make images without code using R Shiny implementation package. live version application can found also easily accessible within R calling function cityview_shiny().","code":""},{"path":"https://koenderks.github.io/rcityviews/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Stylized City Maps using OpenStreetMap (OSM) Data","text":"data available Open Database License.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cities.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographical Locations of World Cities — cities","title":"Geographical Locations of World Cities — cities","text":"Data set geographical locations cities. data can also found   maps package.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographical Locations of World Cities — cities","text":"","code":"data(cities)"},{"path":"https://koenderks.github.io/rcityviews/reference/cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geographical Locations of World Cities — cities","text":"data frame 43645 rows 5 variables. name name city country recorded values entity 1, US dollars. population recorded values entity 2, US dollars. lat recorded values entity 3, US dollars. long recorded values entity 4, US dollars.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cities.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geographical Locations of World Cities — cities","text":"https://cran.r-project.org/package=maps","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographical Locations of World Cities — cities","text":"","code":"data(cities)"},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a City View — cityview","title":"Create a City View — cityview","text":"Create city view showcasing particular city region using   OpenStreetMap (OSM) data retreived trough Overpass API. Please note   OpenStreetMap open data can freely utilized purpose,   long proper credit given OpenStreetMap contributors.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a City View — cityview","text":"","code":"cityview(   name = NULL,   zoom = 1,   theme = c(     \"vintage\", \"modern\", \"bright\", \"delftware\", \"comic\",     \"rouge\", \"original\", \"midearth\", \"batik\", \"vice\"   ),   border = c(     \"none\", \"circle\", \"rhombus\", \"square\",     \"hexagon\", \"octagon\", \"decagon\", \"bbox\"   ),   halftone = NULL,   legend = FALSE,   places = 0,   license = TRUE,   timeout = 25,   filename = NULL,   verbose = TRUE,   cache = TRUE,   bot = FALSE )"},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a City View — cityview","text":"name character specifying name city provided list_cities(), object created using new_city(), row ouput list_cities(). NULL (default), chooses random city. zoom numeric value specifying amount zoom. Values > 1 increase zoom speed computation time, values < 1 decrease zoom increase computation time. zoom levels 0.5, computation time can long. theme character specifying theme plot, named list specifying custom theme (see details section information composition list). Possible pre-specified themes vintage (default), modern, bright, delftware, comic, rouge, original, midearth, batik vice. border character specifying type border use. Possible options none (default), circle, rhombus, square, hexagon (6 vertices), octagon (8 vertices), decagon (10 vertices) bbox (bounding box entire city, argument zoom ignored). halftone character specifying color applied halftone dither. legend logical. Whether add distance measurer compass bottom left corner image. places integer specifying many suburb, quarter neighbourhood names add image. license logical. Whether add OpenStreetMap licence bottom right corner figure. timeout value specifying timeout (seconds) Overpass server. may necessary increase value large populated areas server may time data delivered (occurs receive following error message: runtime error: Query timed \"recurse\" line ... ... seconds. filename character. specified, function exports plot appropriate size return ggplot2 object. verbose logical. Whether show progress bar execution. cache logical. Whether cache data image need requested calling function different theme. bot logical. Enable functionality used Twitter bot.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a City View — cityview","text":"theme argument can take custom list input (see   example). list must contain following elements: colors background:  single color used background. water:       single color used water. landuse:     single color vector multiple colors                            used landuse. contours:    single color used contours (lines)                            landuse buildings. streets:     single color used streets. rails:       single color vector two colors                            used rails. buildings:   single color vector multiple colors                            used buildings. text:        single color used text. font family:      string specifying family font. face:        string specifying face font. scale:       single value specifying expansion factor                            characters font. append:      Optional. string append city name                            sides. size borders:    named list containing sizes borders                           contours, water, canal                           river. streets:    named list contianing sizes streets                           path, residential, structure,                           tertiary, secondary, primary,                           motorway, rails runway.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a City View — cityview","text":"https://www.openstreetmap.org","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a City View — cityview","text":"Koen Derks, koen-derks@hotmail.com","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a City View — cityview","text":"","code":"if (FALSE) { # \\dontrun{ # 1. Simple example # Create a city view of Amsterdam in a circle cityview(name = \"Amsterdam\", border = \"circle\")  # 2. Advanced example # Custom theme (black, beige and white), streets only, direct export myTheme <- list(   colors = list(     background = \"#232323\",     water = \"#232323\",     landuse = \"#232323\",     contours = \"#232323\",     streets = \"#d7b174\",     rails = c(\"#d7b174\", \"#232323\"),     buildings = \"#232323\",     text = \"#ffffff\",     waterlines = \"#232323\"   ),   font = list(     family = \"serif\",     face = \"bold\",     scale = 1,     append = \"\\u2014\"   ),   size = list(     borders = list(       contours = 0.15,       water = 0.4,       canal = 0.5,       river = 0.6     ),     streets = list(       path = 0.2,       residential = 0.3,       structure = 0.35,       tertiary = 0.4,       secondary = 0.5,       primary = 0.6,       motorway = 0.8,       rails = 0.75,       runway = 3     )   ) ) cityview(   name = \"Amsterdam\", theme = myTheme,   border = \"square\", filename = \"Amsterdam.png\" ) } # }"},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"[Shiny] Create a City View — cityview_shiny","title":"[Shiny] Create a City View — cityview_shiny","text":"Launch Shiny app can create city view   showcasing particular city region using OpenStreetMap (OSM) data   retreived trough Overpass API. Please note OpenStreetMap open   data can freely utilized purpose, long proper credit   given OpenStreetMap contributors.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"[Shiny] Create a City View — cityview_shiny","text":"","code":"cityview_shiny(launch.browser = FALSE)"},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"[Shiny] Create a City View — cityview_shiny","text":"launch.browser logical. FALSE (default), app open viewer panel. TRUE, app open system's default web browser.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"[Shiny] Create a City View — cityview_shiny","text":"https://www.openstreetmap.org","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"[Shiny] Create a City View — cityview_shiny","text":"Koen Derks, koen-derks@hotmail.com","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/cityview_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"[Shiny] Create a City View — cityview_shiny","text":"","code":"if (FALSE) { # \\dontrun{ # Start the shiny app cityview_shiny() } # }"},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"List or Search City Names — list_cities","title":"List or Search City Names — list_cities","text":"List city names containing specific string.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List or Search City Names — list_cities","text":"","code":"list_cities(match = NULL)"},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List or Search City Names — list_cities","text":"match string match.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List or Search City Names — list_cities","text":"data frame containing matched cities alongside respective   country coordinates. row output can used input   name argument cityview() function.","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List or Search City Names — list_cities","text":"Koen Derks, koen-derks@hotmail.com","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/list_cities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List or Search City Names — list_cities","text":"","code":"# List all cities containing \"Ams\" list_cities(match = \"Ams\") #>              name         country   lat   long #> 1      Amstelveen The Netherlands 52.32   4.86 #> 2       Amsterdam The Netherlands 52.37   4.89 #> 3       Amstetten         Austria 48.13  14.86 #> 4   New Amsterdam          Guyana  6.25 -57.53 #> 5 Nieuw Amsterdam        Suriname  5.91 -55.07"},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a New City — new_city","title":"Specify a New City — new_city","text":"Define city using country, latitude longitude coordinates.   returned object can used input name argument   cityview() function.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a New City — new_city","text":"","code":"new_city(name = NULL, country = NULL, lat = NULL, long = NULL)"},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a New City — new_city","text":"name single string used city name. country single string used country. lat single numeric value used latitude. long single numeric value used longitude.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a New City — new_city","text":"data frame containing new city alongside respective   country coordinates.","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Specify a New City — new_city","text":"Koen Derks, koen-derks@hotmail.com","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/new_city.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a New City — new_city","text":"","code":"city <- new_city(   name = \"Lagos\", country = \"Portugal\",   lat = 37.10, long = -8.68 ) #> Discovered the city of Lagos, Portugal at 37.1° / -8.68°! if (FALSE) { # \\dontrun{ cityview(name = city) } # }"},{"path":"https://koenderks.github.io/rcityviews/reference/rcityviews.html","id":null,"dir":"Reference","previous_headings":"","what":"R City Views — rcityviews-package","title":"R City Views — rcityviews-package","text":"rcityviews homage programming language R,   open-source geographic data art map making. provides code   examples render customizable stylized city maps using data   OpenStreetMap. documentation rcityviews , including manual user   guide package, worked examples, tutorial information visit    package website.","code":""},{"path":"https://koenderks.github.io/rcityviews/reference/rcityviews.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R City Views — rcityviews-package","text":"Please use citation provided R citing package.   BibTex entry available citation(\"rcityviews\").","code":""},{"path":[]},{"path":"https://koenderks.github.io/rcityviews/news/index.html","id":"rcityviews-112","dir":"Changelog","previous_headings":"","what":"rcityviews 1.1.2","title":"rcityviews 1.1.2","text":"New features Implements caching thanks @pokyah.","code":""},{"path":"https://koenderks.github.io/rcityviews/news/index.html","id":"rcityviews-111","dir":"Changelog","previous_headings":"","what":"rcityviews 1.1.1","title":"rcityviews 1.1.1","text":"New features First implementation rcityviews package.","code":""}]
